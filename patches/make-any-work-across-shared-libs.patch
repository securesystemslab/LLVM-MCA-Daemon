From 388c96da03d5809165056b51d21ff924de2cad67 Mon Sep 17 00:00:00 2001
From: andreroesti <an.roesti@gmail.com>
Date: Mon, 7 Oct 2024 14:31:09 -0700
Subject: [PATCH] make `Any` work across shared libs by making static member
 definition conditional

---
 llvm/include/llvm/ADT/Any.h | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/llvm/include/llvm/ADT/Any.h b/llvm/include/llvm/ADT/Any.h
index 88dbce96c2c3..9f2e900977a5 100644
--- a/llvm/include/llvm/ADT/Any.h
+++ b/llvm/include/llvm/ADT/Any.h
@@ -124,6 +124,7 @@ private:
   std::unique_ptr<StorageBase> Storage;
 };
 
+#ifndef LLVM_ANY_DONT_DEFINE_TYPEID
 // Define the type id and initialize with a non-zero value.
 // Initializing with a zero value means the variable can end up in either the
 // .data or the .bss section. This can lead to multiple definition linker errors
@@ -134,6 +135,7 @@ private:
 // .bss is zero-initialized).
 // See also https://github.com/llvm/llvm-project/issues/62270
 template <typename T> char Any::TypeId<T>::Id = 1;
+#endif
 
 template <class T> T any_cast(const Any &Value) {
   assert(Value.isa<T>() && "Bad any cast!");
-- 
2.39.5 (Apple Git-154)

