// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: emulator.proto

#include "emulator.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr NextAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        num_instructions_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NextAction::NextAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NextActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextActionDefaultTypeInternal() {}
  union {
    NextAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextActionDefaultTypeInternal _NextAction_default_instance_;

inline constexpr EmulatorActions_MemoryAccess::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vaddr_{::uint64_t{0u}},
        size_{0u},
        is_store_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmulatorActions_MemoryAccess::EmulatorActions_MemoryAccess(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmulatorActions_MemoryAccessDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmulatorActions_MemoryAccessDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmulatorActions_MemoryAccessDefaultTypeInternal() {}
  union {
    EmulatorActions_MemoryAccess _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmulatorActions_MemoryAccessDefaultTypeInternal _EmulatorActions_MemoryAccess_default_instance_;

inline constexpr EmulatorActions_BranchFlow::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : is_mispredict_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmulatorActions_BranchFlow::EmulatorActions_BranchFlow(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmulatorActions_BranchFlowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmulatorActions_BranchFlowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmulatorActions_BranchFlowDefaultTypeInternal() {}
  union {
    EmulatorActions_BranchFlow _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmulatorActions_BranchFlowDefaultTypeInternal _EmulatorActions_BranchFlow_default_instance_;

inline constexpr EmulatorActions_Instruction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        opcode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memory_access_{nullptr},
        branch_flow_{nullptr},
        addr_{::uint64_t{0u}},
        size_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR EmulatorActions_Instruction::EmulatorActions_Instruction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmulatorActions_InstructionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmulatorActions_InstructionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmulatorActions_InstructionDefaultTypeInternal() {}
  union {
    EmulatorActions_Instruction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmulatorActions_InstructionDefaultTypeInternal _EmulatorActions_Instruction_default_instance_;

inline constexpr EmulatorActions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instructions_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EmulatorActions::EmulatorActions(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EmulatorActionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmulatorActionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmulatorActionsDefaultTypeInternal() {}
  union {
    EmulatorActions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmulatorActionsDefaultTypeInternal _EmulatorActions_default_instance_;
static ::_pb::Metadata file_level_metadata_emulator_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_emulator_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_emulator_2eproto = nullptr;
const ::uint32_t TableStruct_emulator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::NextAction, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::NextAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NextAction, _impl_.num_instructions_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_MemoryAccess, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_MemoryAccess, _impl_.vaddr_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_MemoryAccess, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_MemoryAccess, _impl_.is_store_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_BranchFlow, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_BranchFlow, _impl_.is_mispredict_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_Instruction, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_Instruction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_Instruction, _impl_.opcode_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_Instruction, _impl_.addr_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_Instruction, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_Instruction, _impl_.memory_access_),
    PROTOBUF_FIELD_OFFSET(::EmulatorActions_Instruction, _impl_.branch_flow_),
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::EmulatorActions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::EmulatorActions, _impl_.instructions_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::NextAction)},
        {10, -1, -1, sizeof(::EmulatorActions_MemoryAccess)},
        {21, -1, -1, sizeof(::EmulatorActions_BranchFlow)},
        {30, 43, -1, sizeof(::EmulatorActions_Instruction)},
        {48, -1, -1, sizeof(::EmulatorActions)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_NextAction_default_instance_._instance,
    &::_EmulatorActions_MemoryAccess_default_instance_._instance,
    &::_EmulatorActions_BranchFlow_default_instance_._instance,
    &::_EmulatorActions_Instruction_default_instance_._instance,
    &::_EmulatorActions_default_instance_._instance,
};
const char descriptor_table_protodef_emulator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016emulator.proto\"@\n\nNextAction\022\035\n\020num_in"
    "structions\030\001 \001(\005H\000\210\001\001B\023\n\021_num_instructio"
    "ns\"\371\002\n\017EmulatorActions\0222\n\014instructions\030\001"
    " \003(\0132\034.EmulatorActions.Instruction\032=\n\014Me"
    "moryAccess\022\r\n\005vaddr\030\001 \001(\004\022\014\n\004size\030\002 \001(\r\022"
    "\020\n\010is_store\030\003 \001(\010\032#\n\nBranchFlow\022\025\n\ris_mi"
    "spredict\030\001 \001(\010\032\315\001\n\013Instruction\022\016\n\006opcode"
    "\030\001 \001(\014\022\014\n\004addr\030\002 \001(\004\022\014\n\004size\030\003 \001(\004\0229\n\rme"
    "mory_access\030\004 \001(\0132\035.EmulatorActions.Memo"
    "ryAccessH\000\210\001\001\0225\n\013branch_flow\030\005 \001(\0132\033.Emu"
    "latorActions.BranchFlowH\001\210\001\001B\020\n\016_memory_"
    "accessB\016\n\014_branch_flow2B\n\010Emulator\0226\n\025Re"
    "cordEmulatorActions\022\020.EmulatorActions\032\013."
    "NextActionb\006proto3"
};
static ::absl::once_flag descriptor_table_emulator_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_emulator_2eproto = {
    false,
    false,
    538,
    descriptor_table_protodef_emulator_2eproto,
    "emulator.proto",
    &descriptor_table_emulator_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_emulator_2eproto::offsets,
    file_level_metadata_emulator_2eproto,
    file_level_enum_descriptors_emulator_2eproto,
    file_level_service_descriptors_emulator_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_emulator_2eproto_getter() {
  return &descriptor_table_emulator_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_emulator_2eproto(&descriptor_table_emulator_2eproto);
// ===================================================================

class NextAction::_Internal {
 public:
  using HasBits = decltype(std::declval<NextAction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NextAction, _impl_._has_bits_);
  static void set_has_num_instructions(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NextAction::NextAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NextAction)
}
NextAction::NextAction(
    ::google::protobuf::Arena* arena, const NextAction& from)
    : NextAction(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NextAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NextAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_instructions_ = {};
}
NextAction::~NextAction() {
  // @@protoc_insertion_point(destructor:NextAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NextAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NextAction::Clear() {
// @@protoc_insertion_point(message_clear_start:NextAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_instructions_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NextAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NextAction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NextAction, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NextAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 num_instructions = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NextAction, _impl_.num_instructions_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(NextAction, _impl_.num_instructions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 num_instructions = 1;
    {PROTOBUF_FIELD_OFFSET(NextAction, _impl_.num_instructions_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NextAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NextAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 num_instructions = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_num_instructions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NextAction)
  return target;
}

::size_t NextAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NextAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 num_instructions = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_instructions());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NextAction::_class_data_ = {
    NextAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NextAction::GetClassData() const {
  return &_class_data_;
}

void NextAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NextAction*>(&to_msg);
  auto& from = static_cast<const NextAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NextAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_num_instructions(from._internal_num_instructions());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NextAction::CopyFrom(const NextAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NextAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NextAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NextAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NextAction::InternalSwap(NextAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.num_instructions_, other->_impl_.num_instructions_);
}

::google::protobuf::Metadata NextAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_emulator_2eproto_getter, &descriptor_table_emulator_2eproto_once,
      file_level_metadata_emulator_2eproto[0]);
}
// ===================================================================

class EmulatorActions_MemoryAccess::_Internal {
 public:
};

EmulatorActions_MemoryAccess::EmulatorActions_MemoryAccess(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EmulatorActions.MemoryAccess)
}
EmulatorActions_MemoryAccess::EmulatorActions_MemoryAccess(
    ::google::protobuf::Arena* arena, const EmulatorActions_MemoryAccess& from)
    : EmulatorActions_MemoryAccess(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EmulatorActions_MemoryAccess::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EmulatorActions_MemoryAccess::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vaddr_),
           0,
           offsetof(Impl_, is_store_) -
               offsetof(Impl_, vaddr_) +
               sizeof(Impl_::is_store_));
}
EmulatorActions_MemoryAccess::~EmulatorActions_MemoryAccess() {
  // @@protoc_insertion_point(destructor:EmulatorActions.MemoryAccess)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmulatorActions_MemoryAccess::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EmulatorActions_MemoryAccess::Clear() {
// @@protoc_insertion_point(message_clear_start:EmulatorActions.MemoryAccess)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.vaddr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_store_) -
      reinterpret_cast<char*>(&_impl_.vaddr_)) + sizeof(_impl_.is_store_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmulatorActions_MemoryAccess::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> EmulatorActions_MemoryAccess::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EmulatorActions_MemoryAccess_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 vaddr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EmulatorActions_MemoryAccess, _impl_.vaddr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.vaddr_)}},
    // uint32 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EmulatorActions_MemoryAccess, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.size_)}},
    // bool is_store = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EmulatorActions_MemoryAccess, _impl_.is_store_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.is_store_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 vaddr = 1;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.vaddr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 size = 2;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool is_store = 3;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.is_store_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EmulatorActions_MemoryAccess::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EmulatorActions.MemoryAccess)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 vaddr = 1;
  if (this->_internal_vaddr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_vaddr(), target);
  }

  // uint32 size = 2;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_size(), target);
  }

  // bool is_store = 3;
  if (this->_internal_is_store() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_store(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EmulatorActions.MemoryAccess)
  return target;
}

::size_t EmulatorActions_MemoryAccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EmulatorActions.MemoryAccess)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 vaddr = 1;
  if (this->_internal_vaddr() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_vaddr());
  }

  // uint32 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_size());
  }

  // bool is_store = 3;
  if (this->_internal_is_store() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EmulatorActions_MemoryAccess::_class_data_ = {
    EmulatorActions_MemoryAccess::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EmulatorActions_MemoryAccess::GetClassData() const {
  return &_class_data_;
}

void EmulatorActions_MemoryAccess::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EmulatorActions_MemoryAccess*>(&to_msg);
  auto& from = static_cast<const EmulatorActions_MemoryAccess&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EmulatorActions.MemoryAccess)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vaddr() != 0) {
    _this->_internal_set_vaddr(from._internal_vaddr());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  if (from._internal_is_store() != 0) {
    _this->_internal_set_is_store(from._internal_is_store());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmulatorActions_MemoryAccess::CopyFrom(const EmulatorActions_MemoryAccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EmulatorActions.MemoryAccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmulatorActions_MemoryAccess::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EmulatorActions_MemoryAccess::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EmulatorActions_MemoryAccess::InternalSwap(EmulatorActions_MemoryAccess* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.is_store_)
      + sizeof(EmulatorActions_MemoryAccess::_impl_.is_store_)
      - PROTOBUF_FIELD_OFFSET(EmulatorActions_MemoryAccess, _impl_.vaddr_)>(
          reinterpret_cast<char*>(&_impl_.vaddr_),
          reinterpret_cast<char*>(&other->_impl_.vaddr_));
}

::google::protobuf::Metadata EmulatorActions_MemoryAccess::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_emulator_2eproto_getter, &descriptor_table_emulator_2eproto_once,
      file_level_metadata_emulator_2eproto[1]);
}
// ===================================================================

class EmulatorActions_BranchFlow::_Internal {
 public:
};

EmulatorActions_BranchFlow::EmulatorActions_BranchFlow(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EmulatorActions.BranchFlow)
}
EmulatorActions_BranchFlow::EmulatorActions_BranchFlow(
    ::google::protobuf::Arena* arena, const EmulatorActions_BranchFlow& from)
    : EmulatorActions_BranchFlow(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EmulatorActions_BranchFlow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EmulatorActions_BranchFlow::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_mispredict_ = {};
}
EmulatorActions_BranchFlow::~EmulatorActions_BranchFlow() {
  // @@protoc_insertion_point(destructor:EmulatorActions.BranchFlow)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmulatorActions_BranchFlow::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EmulatorActions_BranchFlow::Clear() {
// @@protoc_insertion_point(message_clear_start:EmulatorActions.BranchFlow)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_mispredict_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmulatorActions_BranchFlow::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EmulatorActions_BranchFlow::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EmulatorActions_BranchFlow_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_mispredict = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EmulatorActions_BranchFlow, _impl_.is_mispredict_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_BranchFlow, _impl_.is_mispredict_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_mispredict = 1;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_BranchFlow, _impl_.is_mispredict_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* EmulatorActions_BranchFlow::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EmulatorActions.BranchFlow)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_mispredict = 1;
  if (this->_internal_is_mispredict() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_mispredict(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EmulatorActions.BranchFlow)
  return target;
}

::size_t EmulatorActions_BranchFlow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EmulatorActions.BranchFlow)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_mispredict = 1;
  if (this->_internal_is_mispredict() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EmulatorActions_BranchFlow::_class_data_ = {
    EmulatorActions_BranchFlow::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EmulatorActions_BranchFlow::GetClassData() const {
  return &_class_data_;
}

void EmulatorActions_BranchFlow::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EmulatorActions_BranchFlow*>(&to_msg);
  auto& from = static_cast<const EmulatorActions_BranchFlow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EmulatorActions.BranchFlow)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_mispredict() != 0) {
    _this->_internal_set_is_mispredict(from._internal_is_mispredict());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmulatorActions_BranchFlow::CopyFrom(const EmulatorActions_BranchFlow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EmulatorActions.BranchFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmulatorActions_BranchFlow::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EmulatorActions_BranchFlow::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EmulatorActions_BranchFlow::InternalSwap(EmulatorActions_BranchFlow* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.is_mispredict_, other->_impl_.is_mispredict_);
}

::google::protobuf::Metadata EmulatorActions_BranchFlow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_emulator_2eproto_getter, &descriptor_table_emulator_2eproto_once,
      file_level_metadata_emulator_2eproto[2]);
}
// ===================================================================

class EmulatorActions_Instruction::_Internal {
 public:
  using HasBits = decltype(std::declval<EmulatorActions_Instruction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_._has_bits_);
  static const ::EmulatorActions_MemoryAccess& memory_access(const EmulatorActions_Instruction* msg);
  static void set_has_memory_access(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::EmulatorActions_BranchFlow& branch_flow(const EmulatorActions_Instruction* msg);
  static void set_has_branch_flow(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::EmulatorActions_MemoryAccess& EmulatorActions_Instruction::_Internal::memory_access(const EmulatorActions_Instruction* msg) {
  return *msg->_impl_.memory_access_;
}
const ::EmulatorActions_BranchFlow& EmulatorActions_Instruction::_Internal::branch_flow(const EmulatorActions_Instruction* msg) {
  return *msg->_impl_.branch_flow_;
}
EmulatorActions_Instruction::EmulatorActions_Instruction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EmulatorActions.Instruction)
}
inline PROTOBUF_NDEBUG_INLINE EmulatorActions_Instruction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        opcode_(arena, from.opcode_) {}

EmulatorActions_Instruction::EmulatorActions_Instruction(
    ::google::protobuf::Arena* arena,
    const EmulatorActions_Instruction& from)
    : ::google::protobuf::Message(arena) {
  EmulatorActions_Instruction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.memory_access_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::EmulatorActions_MemoryAccess>(arena, *from._impl_.memory_access_)
                : nullptr;
  _impl_.branch_flow_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::EmulatorActions_BranchFlow>(arena, *from._impl_.branch_flow_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, addr_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, addr_),
           offsetof(Impl_, size_) -
               offsetof(Impl_, addr_) +
               sizeof(Impl_::size_));

  // @@protoc_insertion_point(copy_constructor:EmulatorActions.Instruction)
}
inline PROTOBUF_NDEBUG_INLINE EmulatorActions_Instruction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        opcode_(arena) {}

inline void EmulatorActions_Instruction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memory_access_),
           0,
           offsetof(Impl_, size_) -
               offsetof(Impl_, memory_access_) +
               sizeof(Impl_::size_));
}
EmulatorActions_Instruction::~EmulatorActions_Instruction() {
  // @@protoc_insertion_point(destructor:EmulatorActions.Instruction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmulatorActions_Instruction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.opcode_.Destroy();
  delete _impl_.memory_access_;
  delete _impl_.branch_flow_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EmulatorActions_Instruction::Clear() {
// @@protoc_insertion_point(message_clear_start:EmulatorActions.Instruction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.opcode_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.memory_access_ != nullptr);
      _impl_.memory_access_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.branch_flow_ != nullptr);
      _impl_.branch_flow_->Clear();
    }
  }
  ::memset(&_impl_.addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.addr_)) + sizeof(_impl_.size_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmulatorActions_Instruction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> EmulatorActions_Instruction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EmulatorActions_Instruction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes opcode = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.opcode_)}},
    // uint64 addr = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EmulatorActions_Instruction, _impl_.addr_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.addr_)}},
    // uint64 size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EmulatorActions_Instruction, _impl_.size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.size_)}},
    // optional .EmulatorActions.MemoryAccess memory_access = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.memory_access_)}},
    // optional .EmulatorActions.BranchFlow branch_flow = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.branch_flow_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes opcode = 1;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.opcode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 addr = 2;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.addr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 size = 3;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // optional .EmulatorActions.MemoryAccess memory_access = 4;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.memory_access_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .EmulatorActions.BranchFlow branch_flow = 5;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.branch_flow_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::EmulatorActions_MemoryAccess>()},
    {::_pbi::TcParser::GetTable<::EmulatorActions_BranchFlow>()},
  }}, {{
  }},
};

::uint8_t* EmulatorActions_Instruction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EmulatorActions.Instruction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes opcode = 1;
  if (!this->_internal_opcode().empty()) {
    const std::string& _s = this->_internal_opcode();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint64 addr = 2;
  if (this->_internal_addr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_addr(), target);
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_size(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .EmulatorActions.MemoryAccess memory_access = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::memory_access(this),
        _Internal::memory_access(this).GetCachedSize(), target, stream);
  }

  // optional .EmulatorActions.BranchFlow branch_flow = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::branch_flow(this),
        _Internal::branch_flow(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EmulatorActions.Instruction)
  return target;
}

::size_t EmulatorActions_Instruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EmulatorActions.Instruction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes opcode = 1;
  if (!this->_internal_opcode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_opcode());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .EmulatorActions.MemoryAccess memory_access = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.memory_access_);
    }

    // optional .EmulatorActions.BranchFlow branch_flow = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.branch_flow_);
    }

  }
  // uint64 addr = 2;
  if (this->_internal_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_addr());
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EmulatorActions_Instruction::_class_data_ = {
    EmulatorActions_Instruction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EmulatorActions_Instruction::GetClassData() const {
  return &_class_data_;
}

void EmulatorActions_Instruction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EmulatorActions_Instruction*>(&to_msg);
  auto& from = static_cast<const EmulatorActions_Instruction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EmulatorActions.Instruction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_opcode().empty()) {
    _this->_internal_set_opcode(from._internal_opcode());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_memory_access()->::EmulatorActions_MemoryAccess::MergeFrom(
          from._internal_memory_access());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_branch_flow()->::EmulatorActions_BranchFlow::MergeFrom(
          from._internal_branch_flow());
    }
  }
  if (from._internal_addr() != 0) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmulatorActions_Instruction::CopyFrom(const EmulatorActions_Instruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EmulatorActions.Instruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmulatorActions_Instruction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EmulatorActions_Instruction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EmulatorActions_Instruction::InternalSwap(EmulatorActions_Instruction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.opcode_, &other->_impl_.opcode_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.size_)
      + sizeof(EmulatorActions_Instruction::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(EmulatorActions_Instruction, _impl_.memory_access_)>(
          reinterpret_cast<char*>(&_impl_.memory_access_),
          reinterpret_cast<char*>(&other->_impl_.memory_access_));
}

::google::protobuf::Metadata EmulatorActions_Instruction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_emulator_2eproto_getter, &descriptor_table_emulator_2eproto_once,
      file_level_metadata_emulator_2eproto[3]);
}
// ===================================================================

class EmulatorActions::_Internal {
 public:
};

EmulatorActions::EmulatorActions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EmulatorActions)
}
inline PROTOBUF_NDEBUG_INLINE EmulatorActions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : instructions_{visibility, arena, from.instructions_},
        _cached_size_{0} {}

EmulatorActions::EmulatorActions(
    ::google::protobuf::Arena* arena,
    const EmulatorActions& from)
    : ::google::protobuf::Message(arena) {
  EmulatorActions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:EmulatorActions)
}
inline PROTOBUF_NDEBUG_INLINE EmulatorActions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instructions_{visibility, arena},
        _cached_size_{0} {}

inline void EmulatorActions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EmulatorActions::~EmulatorActions() {
  // @@protoc_insertion_point(destructor:EmulatorActions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EmulatorActions::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EmulatorActions::Clear() {
// @@protoc_insertion_point(message_clear_start:EmulatorActions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instructions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EmulatorActions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> EmulatorActions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EmulatorActions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .EmulatorActions.Instruction instructions = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EmulatorActions, _impl_.instructions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .EmulatorActions.Instruction instructions = 1;
    {PROTOBUF_FIELD_OFFSET(EmulatorActions, _impl_.instructions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::EmulatorActions_Instruction>()},
  }}, {{
  }},
};

::uint8_t* EmulatorActions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EmulatorActions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .EmulatorActions.Instruction instructions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_instructions_size()); i < n; i++) {
    const auto& repfield = this->_internal_instructions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EmulatorActions)
  return target;
}

::size_t EmulatorActions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EmulatorActions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .EmulatorActions.Instruction instructions = 1;
  total_size += 1UL * this->_internal_instructions_size();
  for (const auto& msg : this->_internal_instructions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EmulatorActions::_class_data_ = {
    EmulatorActions::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EmulatorActions::GetClassData() const {
  return &_class_data_;
}

void EmulatorActions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EmulatorActions*>(&to_msg);
  auto& from = static_cast<const EmulatorActions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EmulatorActions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instructions()->MergeFrom(
      from._internal_instructions());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EmulatorActions::CopyFrom(const EmulatorActions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EmulatorActions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EmulatorActions::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EmulatorActions::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EmulatorActions::InternalSwap(EmulatorActions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instructions_.InternalSwap(&other->_impl_.instructions_);
}

::google::protobuf::Metadata EmulatorActions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_emulator_2eproto_getter, &descriptor_table_emulator_2eproto_once,
      file_level_metadata_emulator_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
